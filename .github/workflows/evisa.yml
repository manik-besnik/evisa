name: Deploy Laravel App

on:
  push:
    branches:
      - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}/laravel-app
      CONTAINER_NAME: evisa
      SERVER_USER: ubuntu  # Change to your server username
      SERVER_IP: your_server_ip  # Change to your server IP

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t $IMAGE_NAME:latest -f docker/php/Dockerfile .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/evisa

            echo "Stopping old container..."
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            echo "Pulling new image..."
            docker pull $IMAGE_NAME:latest

            echo "Starting new container..."
            docker run -d --name $CONTAINER_NAME \
              -p 8000:80 \
              --env-file .env \
              -v /var/www/evisa:/var/www \
              -v /var/www/evisa/public/uploads:/var/www/public/uploads \
              $IMAGE_NAME:latest

            echo "Running Laravel tasks..."
            docker exec $CONTAINER_NAME php artisan migrate --force
            docker exec $CONTAINER_NAME php artisan config:clear
            docker exec $CONTAINER_NAME php artisan cache:clear
            docker exec $CONTAINER_NAME php artisan queue:restart
            docker exec $CONTAINER_NAME php artisan octane:reload

            echo "Deployment completed successfully!"
